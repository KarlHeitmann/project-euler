#
#
#  The sequence of triangle numbers is generated by adding the natural numbers. So
# the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten
# terms would be:
#
#     1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...
#
# Let us list the factors of the first seven triangle numbers:
#
#     1: 1
#     3: 1,3
#     6: 1,2,3,6
#     10: 1,2,5,10
#     15: 1,3,5,15
#     21: 1,3,7,21
#     28: 1,2,4,7,14,28
#
#  We can see that 28 is the first triangle number
# to have over five divisors.
#
#  What is the value of the first triangle number
# to have over five hundred divisors?
#

require 'awesome_print'

OBJ = 50

fin = true

def triangle_number (n)
  return n if n == 1
  return n + triangle_number(n-1)
end

i = 3

start = Time.now
actual = 3
while(fin) do
  actual += i

  k = 2
  reduc = actual
  divis = []
  while k <= reduc do
    if (reduc%k) == 0
      divis << k
      reduc = reduc/k
      k = 2
    else
      k += 1
    end
  end
  #ap actual
  #ap divis
  fin = false if (divis.count+2) >= OBJ
  i += 1
end
finish = Time.now

ap actual
ap divis.count + 2
ap i
ap finish - start

